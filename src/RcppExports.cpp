// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// bit_index
arma::umat bit_index(int n);
RcppExport SEXP eulerr_bit_index(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(bit_index(n));
    return rcpp_result_gen;
END_RCPP
}
// return_intersections
arma::vec return_intersections(arma::vec par);
RcppExport SEXP eulerr_return_intersections(SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    rcpp_result_gen = Rcpp::wrap(return_intersections(par));
    return rcpp_result_gen;
END_RCPP
}
// venneuler_stress
double venneuler_stress(const arma::vec& areas, const arma::vec& fit);
RcppExport SEXP eulerr_venneuler_stress(SEXP areasSEXP, SEXP fitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type areas(areasSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type fit(fitSEXP);
    rcpp_result_gen = Rcpp::wrap(venneuler_stress(areas, fit));
    return rcpp_result_gen;
END_RCPP
}
// loss_final
double loss_final(const arma::vec par, const arma::vec areas);
RcppExport SEXP eulerr_loss_final(SEXP parSEXP, SEXP areasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type areas(areasSEXP);
    rcpp_result_gen = Rcpp::wrap(loss_final(par, areas));
    return rcpp_result_gen;
END_RCPP
}
// choose_two
IntegerMatrix choose_two(IntegerVector x);
RcppExport SEXP eulerr_choose_two(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(choose_two(x));
    return rcpp_result_gen;
END_RCPP
}
// discdisc
NumericVector discdisc(NumericVector r1, NumericVector r2, NumericVector d);
RcppExport SEXP eulerr_discdisc(SEXP r1SEXP, SEXP r2SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(discdisc(r1, r2, d));
    return rcpp_result_gen;
END_RCPP
}
